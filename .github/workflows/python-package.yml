name: test

on:
  push:
#    branches: [ develop, master ]
  pull_request:
    branches: [ develop ]

env:
  FORCE_COLOR: 1

permissions: # Added based on common practice and example
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint and docs
    runs-on: ubuntu-latest
    timeout-minutes: 5 # Adjusted timeout

    steps:
      - uses: actions/checkout@v4

      - name: Check repository best-practices
        uses: scientific-python/repo-review@v0.12.2
        with:
          plugins: sp-repo-review

      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true

      - name: Run ruff check
        uses: astral-sh/ruff-action@v3

      - name: Run ruff formatter
        uses: astral-sh/ruff-action@v3
        with:
          args: 'format --check --diff'

      - name: Build sphinx docs
        run: uvx tox -e docs

      - name: Typo checking
        uses: codespell-project/actions-codespell@v2

  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - name: Generate Matrix
        id: generate-matrix
        uses: coactions/dynamic-matrix@v3
        with:
          platforms: 'linux,macos,windows'
          min_python: '3.9'
          linux: full
          windows: full
          macos: full

  typetest:
    name: Type ${{matrix.os}} py${{ matrix.python_version }}
    needs: matrix
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    timeout-minutes: 5 # Adjusted timeout

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.matrix.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup uv for Python ${{ matrix.python_version }}
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python_version }}
          activate-environment: true

      - name: Sync uv environment to show what packages are installed
        run: >
          uv sync
          -p ${{ matrix.python_version }}

      - name: Run pyright
        run: pyright

      - name: Run mypy
        run: >
          mypy
          --cache-dir=/dev/null
          .

  tests:
    name: Test py${{ matrix.python_version }} ${{matrix.os}}
    needs: matrix
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Start Redis
        uses: supercharge/redis-github-action@1.8.0
        # Redis does not support all operating systems so allow failure
        continue-on-error: true

      - name: Setup uv for Python ${{ matrix.python_version }}
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true
          python-version: ${{ matrix.python_version }}

      - name: Sync uv environment to show what packages are installed
        run: >
          uv sync
          -p ${{ matrix.python_version }}

      - name: Run pytest
        run: >
          pytest
          --junitxml=junit/test-results-${{ matrix.name }}.xml

      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.name }}
          path: junit/test-results-${{ matrix.name }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
